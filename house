<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>AI House Generator</title>
  <style>
    body { margin: 0; overflow: hidden; }
    #promptInput {
      position: absolute;
      top: 10px; left: 10px;
      z-index: 10;
      padding: 8px;
    }
  </style>
</head>
<body>
  <input id="promptInput" placeholder="Describe your house..." size="50">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/three@0.128.0/examples/js/controls/PointerLockControls.js"></script>

  <script>
    let scene = new THREE.Scene();
    let camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);
    let renderer = new THREE.WebGLRenderer();
    renderer.setSize(window.innerWidth, window.innerHeight);
    document.body.appendChild(renderer.domElement);

    // Light
    const light = new THREE.DirectionalLight(0xffffff, 1);
    light.position.set(10, 10, 10);
    scene.add(light);

    // Floor
    const floorGeometry = new THREE.PlaneGeometry(100, 100);
    const floorMaterial = new THREE.MeshStandardMaterial({ color: 0x808080 });
    const floor = new THREE.Mesh(floorGeometry, floorMaterial);
    floor.rotation.x = -Math.PI / 2;
    scene.add(floor);

    // Controls
    const controls = new THREE.PointerLockControls(camera, document.body);
    document.body.addEventListener('click', () => controls.lock());
    camera.position.y = 2;

    // Basic movement
    let keys = {};
    document.addEventListener('keydown', (e) => keys[e.key] = true);
    document.addEventListener('keyup', (e) => keys[e.key] = false);

    function animateMovement() {
      if (controls.isLocked) {
        let speed = 0.1;
        let direction = new THREE.Vector3();
        if (keys['w']) direction.z -= speed;
        if (keys['s']) direction.z += speed;
        if (keys['a']) direction.x -= speed;
        if (keys['d']) direction.x += speed;
        controls.moveRight(direction.x);
        controls.moveForward(direction.z);
      }
    }

    function animate() {
      requestAnimationFrame(animate);
      animateMovement();
      renderer.render(scene, camera);
    }
    animate();

    // AI House Generator (very basic placeholder)
    function generateHouse(prompt) {
      for (let i = scene.children.length - 1; i >= 0; i--) {
        if (scene.children[i].userData.room) scene.remove(scene.children[i]);
      }

      if (prompt.toLowerCase().includes("kitchen")) {
        const room = new THREE.Mesh(
          new THREE.BoxGeometry(10, 4, 10),
          new THREE.MeshStandardMaterial({ color: 0xffccaa })
        );
        room.position.set(0, 2, -15);
        room.userData.room = true;
        scene.add(room);
      }

      if (prompt.toLowerCase().includes("pool")) {
        const pool = new THREE.Mesh(
          new THREE.BoxGeometry(6, 0.2, 10),
          new THREE.MeshStandardMaterial({ color: 0x00bfff })
        );
        pool.position.set(15, 0.1, 0);
        pool.userData.room = true;
        scene.add(pool);
      }
    }

    document.getElementById("promptInput").addEventListener("change", (e) => {
      const prompt = e.target.value;
      generateHouse(prompt);
    });
  </script>
</body>
</html>
